language: c++

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    - llvm-toolchain-precise-3.6
    - llvm-toolchain-precise-3.7
    - llvm-toolchain-precise-3.8
    packages:
    - libeigen3-dev
    - g++-5
    - gcc-5
    - g++-6
    - gcc-6
    - clang-3.6
    - clang-3.7
    - clang-3.8

env:
  # Workaround for https://github.com/travis-ci/travis-ci/issues/4681
  matrix:
    - TRAVIS_EMPTY_JOB_WORKAROUND=true
  
matrix:
  exclude:
    - env: TRAVIS_EMPTY_JOB_WORKAROUND=true
  include:
    # LINUX
    # GCC 5
    - os: linux
      env: COMPILER=g++-5
      compiler: gcc

    # GCC 6
    - os: linux
      env: COMPILER=g++-6
      compiler: gcc
      
    # Clang 3.6
    - os: linux
      env: COMPILER=clang++-3.6 CCOMPILER=clang-3.6
      compiler: clang
      
    # Clang 3.7
    - os: linux
      env: COMPILER=clang++-3.7 CCOMPILER=clang-3.7
      compiler: clang
      
    # Clang 3.8
    - os: linux
      env: COMPILER=clang++-3.8 CCOMPILER=clang-3.8
      compiler: clang
      
    # OSX
    # Xcode 6.4
    - os: osx
      osx_image: xcode6.4
      
    # Xcode 7.3
    - os: osx
      osx_image: xcode7.3
      
    # Xcode 8
    - os: osx
      osx_image: xcode8
     
install:  
  ############################################################################
  # Override compiler if needed
  ############################################################################
  - if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; export CC=${CCOMPILER}; fi
  
    ############################################################################
  # Install a recent CMake (unless already installed on OS X)
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="http://www.cmake.org/files/v3.5/cmake-3.5.2-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${TRAVIS_BUILD_DIR}/cmake/bin:${PATH}
    else
      if ! brew ls --version cmake &>/dev/null; then brew install cmake; fi
    fi

script:
  - cd $TRAVIS_BUILD_DIR
  - mkdir build && cd build
  - mkdir array && cd array && cmake ../../array && make && ./array && cd ..
  - mkdir regex && cd regex && cmake ../../regex && make && ./regex && cd ..
  - mkdir tuple && cd tuple && cmake ../../tuple && make && ./tuple && cd ..
  - mkdir chrono && cd chrono && cmake ../../chrono && make && ./chrono && cd ..
  - mkdir random && cd random && cmake ../../random && make && ./random && cd ..
  - mkdir cstdint && cd cstdint && cmake ../../cstdint && make && ./cstdint && cd ..
  - mkdir functional && cd functional && cmake ../../functional && make && ./functional && cd ..
  - mkdir type_traits && cd type_traits && cmake ../../type_traits && make && ./type_traits && cd ..
  - mkdir forward_list && cd forward_list && cmake ../../forward_list && make && ./forward_list && cd ..
  - mkdir unordered_map && cd unordered_map && cmake ../../unordered_map && make && ./unordered_map && cd ..
  - mkdir unordered_set && cd unordered_set && cmake ../../unordered_set && make && ./unordered_set && cd ..
  - mkdir initializer_list && cd initializer_list && cmake ../../initializer_list && make && ./initializer_list && cd ..

